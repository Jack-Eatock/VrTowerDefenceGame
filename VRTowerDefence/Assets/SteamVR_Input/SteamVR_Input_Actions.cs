//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_GrabR;
        
        private static SteamVR_Action_Single p_grabPullLocomotion_Pull;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_GrabL;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_Menu;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_GripR;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_GripL;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_East;
        
        private static SteamVR_Action_Boolean p_grabPullLocomotion_West;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_GrabR
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_GrabR.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single grabPullLocomotion_Pull
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_Pull.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_GrabL
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_GrabL.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_Menu
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_GripR
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_GripR.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_GripL
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_GripL.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_East
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_East.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean grabPullLocomotion_West
        {
            get
            {
                return SteamVR_Actions.p_grabPullLocomotion_West.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.grabPullLocomotion_GrabR,
                    SteamVR_Actions.grabPullLocomotion_Pull,
                    SteamVR_Actions.grabPullLocomotion_GrabL,
                    SteamVR_Actions.grabPullLocomotion_Menu,
                    SteamVR_Actions.grabPullLocomotion_GripR,
                    SteamVR_Actions.grabPullLocomotion_GripL,
                    SteamVR_Actions.grabPullLocomotion_East,
                    SteamVR_Actions.grabPullLocomotion_West};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.grabPullLocomotion_GrabR,
                    SteamVR_Actions.grabPullLocomotion_Pull,
                    SteamVR_Actions.grabPullLocomotion_GrabL,
                    SteamVR_Actions.grabPullLocomotion_Menu,
                    SteamVR_Actions.grabPullLocomotion_GripR,
                    SteamVR_Actions.grabPullLocomotion_GripL,
                    SteamVR_Actions.grabPullLocomotion_East,
                    SteamVR_Actions.grabPullLocomotion_West};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.grabPullLocomotion_GrabR,
                    SteamVR_Actions.grabPullLocomotion_GrabL,
                    SteamVR_Actions.grabPullLocomotion_Menu,
                    SteamVR_Actions.grabPullLocomotion_GripR,
                    SteamVR_Actions.grabPullLocomotion_GripL,
                    SteamVR_Actions.grabPullLocomotion_East,
                    SteamVR_Actions.grabPullLocomotion_West};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.grabPullLocomotion_Pull};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.grabPullLocomotion_GrabR,
                    SteamVR_Actions.grabPullLocomotion_Pull,
                    SteamVR_Actions.grabPullLocomotion_GrabL,
                    SteamVR_Actions.grabPullLocomotion_Menu,
                    SteamVR_Actions.grabPullLocomotion_GripR,
                    SteamVR_Actions.grabPullLocomotion_GripL,
                    SteamVR_Actions.grabPullLocomotion_East,
                    SteamVR_Actions.grabPullLocomotion_West};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_grabPullLocomotion_GrabR = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/GrabR")));
            SteamVR_Actions.p_grabPullLocomotion_Pull = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/GrabPullLocomotion/in/Pull")));
            SteamVR_Actions.p_grabPullLocomotion_GrabL = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/GrabL")));
            SteamVR_Actions.p_grabPullLocomotion_Menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/Menu")));
            SteamVR_Actions.p_grabPullLocomotion_GripR = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/GripR")));
            SteamVR_Actions.p_grabPullLocomotion_GripL = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/GripL")));
            SteamVR_Actions.p_grabPullLocomotion_East = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/East")));
            SteamVR_Actions.p_grabPullLocomotion_West = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/GrabPullLocomotion/in/West")));
        }
    }
}
